#! /bin/sh
# bnc_curl: call curl after authenticating with iChain at bugzilla.novell.com
# author: http://en.opensuse.org/User:Mvidner
#
# usage:
# bnc_curl "https://bugzilla.novell.com/show_bug.cgi?id=176013" > bug.html
# needs a file with "username=foo&password=bar"

# exit on errors
set -o errexit

# encode args as %hex to hide passwords from passers by
percentize() {
    echo "$@" | perl -p -e 's/(.)/sprintf("%%%02x",ord $1)/eg'
}

function read_credentials_from_oscrc() {
    local _user _pass

    if [ -r $HOME/.oscrc ]; then
        # read the section [https://api.opensuse.org] from ~/.oscrc and
        # modify it to the shell evaluable format, results are two variables
        # USERNAME and PASSWORD
        eval `grep -A 4 '^\[https://api.opensuse.org/\]' ~/.oscrc | \
              sed -e 's/[ ]*//g' -e 's/^user=/USERNAME=/' -e 's/pass=/PASSWORD=/' | \
              grep '^\(USERNAME\|PASSWORD\)='`
    fi
}

function get_firefox3_cookies_db() {

    local _foo
    _foo=`ls -1 ~/.mozilla/firefox/*/cookies.sqlite 2> /dev/null | wc -l`

    case ${_foo} in
        0)
            echo "No cookies.sqlite found" > /dev/stderr
            ;;
        1)
            ls -1 ~/.mozilla/firefox/*/cookies.sqlite
            ;;
        *)
            echo "There're multiple Firefox profiles, don't know which one to use" > /dev/stderr
            ;;
    esac

}

function read_bnc_cookies_from_firefox3() {
    local _db _tmpdb _row

    _db=$1
    [ -r "$_db" ] || exit 2

    _tmpdb=`mktemp bnc_curl_cookies_XXXXXX` || exit 3
    trap "rm /tmp/bnc_curl_*" EXIT INT TERM
    cp "$_db" "$_tmpdb"

    sqlite3 "$_tmpdb" 'SELECT * from moz_cookies WHERE host="bugzilla.novell.com";' | while read _row; do
        # not need to encode string, so plain awk is enough
        echo "$_row" | awk  -F '|' '{print $4 "\tFALSE\t" $5 "\tTRUE\t" $6 "\t" $2 "\t" $3};'
    done
    rm $_tmpdb
}

# file with credentials
CREDSFILE=$HOME/.bnc.creds
if [ "$1" == "--install" ]; then
    read_credentials_from_oscrc
    if [ -z "$USERNAME" -o -z "$PASSWORD" ]; then
        echo -n "Bugzilla.Novell.com username (not email): "
        read USERNAME
        echo -n "Bugzilla.Novell.com password (no echo): "
        stty -echo; read PASSWORD; echo; stty echo
    fi
    echo "username=$(percentize $USERNAME)&password=$(percentize $PASSWORD)" > $CREDSFILE
    chmod 600 $CREDSFILE
    exit
fi

if ! test -r $CREDSFILE; then
    echo >&2 "Cannot read credentials from $CREDSFILE."
    echo >&2 "Call $0 --install to create it."
    exit 1
fi

ICHAIN="https://bugzilla.novell.com/ICSLogin/auth-up"

# relevant curl options:
# -b: input cookies (various formats)
# -c: save cookies in Netscape format
# -d: pass form data (@ from file)
# -L: follow redirects

COOKIEJAR=`mktemp -t bnc_curl_cookiejar_XXXXXX` || exit 1
trap "rm /tmp/bnc_curl_*" EXIT INT TERM

curl -c $COOKIEJAR -d @$CREDSFILE "$ICHAIN" >&2
if [ -n "`get_firefox3_cookies_db`" ]; then
    read_bnc_cookies_from_firefox3 `get_firefox3_cookies_db` >> $COOKIEJAR
fi
curl -L -b $COOKIEJAR "$@"
